//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.Gusker;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(DefaultPage.CLASS_NAME, typeof(DefaultPage))]

namespace CMS.DocumentEngine.Types.Gusker
{
	/// <summary>
	/// Represents a content item of type DefaultPage.
	/// </summary>
	public partial class DefaultPage : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Gusker.DefaultPage";


		/// <summary>
		/// The instance of the class that provides extended API for working with DefaultPage fields.
		/// </summary>
		private readonly DefaultPageFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// DefaultPageID.
		/// </summary>
		[DatabaseIDField]
		public int DefaultPageID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("DefaultPageID"), 0);
			}
			set
			{
				SetValue("DefaultPageID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Page title.
		/// </summary>
		[DatabaseField]
		public string PageTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageTitle"), @"");
			}
			set
			{
				SetValue("PageTitle", value);
			}
		}


		/// <summary>
		/// Redirect to First Child.
		/// </summary>
		[DatabaseField]
		public bool RedirectToFirstChild
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("RedirectToFirstChild"), false);
			}
			set
			{
				SetValue("RedirectToFirstChild", value);
			}
		}


		/// <summary>
		/// Redirect To URL.
		/// </summary>
		[DatabaseField]
		public string RedirectToUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("RedirectToUrl"), @"");
			}
			set
			{
				SetValue("RedirectToUrl", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with DefaultPage fields.
		/// </summary>
		[RegisterProperty]
		public DefaultPageFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with DefaultPage fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class DefaultPageFields : AbstractHierarchicalObject<DefaultPageFields>
		{
			/// <summary>
			/// The content item of type DefaultPage that is a target of the extended API.
			/// </summary>
			private readonly DefaultPage mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="DefaultPageFields" /> class with the specified content item of type DefaultPage.
			/// </summary>
			/// <param name="instance">The content item of type DefaultPage that is a target of the extended API.</param>
			public DefaultPageFields(DefaultPage instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// DefaultPageID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.DefaultPageID;
				}
				set
				{
					mInstance.DefaultPageID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Page title.
			/// </summary>
			public string PageTitle
			{
				get
				{
					return mInstance.PageTitle;
				}
				set
				{
					mInstance.PageTitle = value;
				}
			}


			/// <summary>
			/// Redirect to First Child.
			/// </summary>
			public bool RedirectToFirstChild
			{
				get
				{
					return mInstance.RedirectToFirstChild;
				}
				set
				{
					mInstance.RedirectToFirstChild = value;
				}
			}


			/// <summary>
			/// Redirect To URL.
			/// </summary>
			public string RedirectToUrl
			{
				get
				{
					return mInstance.RedirectToUrl;
				}
				set
				{
					mInstance.RedirectToUrl = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="DefaultPage" /> class.
		/// </summary>
		public DefaultPage() : base(CLASS_NAME)
		{
			mFields = new DefaultPageFields(this);
		}

		#endregion
	}
}